<?xml version="1.0" encoding="UTF-8"?>
<files>
  <file src="src/Bridge/PhpUnit/DefinitionEqualsServiceLocatorConstraint.php">
    <PossiblyNullArrayAccess occurrences="1">
      <code>$definition-&gt;getFactory()[0]</code>
    </PossiblyNullArrayAccess>
  </file>
  <file src="src/Module/CoreModule/Application/Service/Crypto/Argon2SplitToken.php">
    <InvalidNullableReturnType occurrences="1">
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>return password_hash($verifier, PASSWORD_ARGON2I, $this-&gt;config);</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Module/CoreModule/Application/Service/Crypto/Argon2SplitTokenFactory.php">
    <UndefinedClass occurrences="1">
      <code>HiddenString</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Application/Service/EventListener/ClientPasswordResetRequestListener.php">
    <PossiblyNullArgument occurrences="1">
      <code>$event-&gt;token()-&gt;getExpirationTime()</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/CoreModule/Application/Service/Mailer/RecipientEnvelope.php">
    <InvalidNullableReturnType occurrences="3">
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="3">
      <code>return $this-&gt;locale;</code>
      <code>return $this-&gt;encryptionKey;</code>
      <code>return $this-&gt;encryptionType;</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Module/CoreModule/Domain/Client/Client.php">
    <PossiblyNullReference occurrences="1">
      <code>metadata</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Module/CoreModule/Domain/Shared/SplitToken.php">
    <PossiblyNullArgument occurrences="1">
      <code>$token-&gt;verifierHash()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>isExpired</code>
      <code>verifierHash</code>
    </PossiblyNullReference>
    <UndefinedClass occurrences="5">
      <code>HiddenString</code>
      <code>HiddenString</code>
      <code>HiddenString</code>
      <code>HiddenString</code>
      <code>HiddenString</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Domain/Shared/SplitTokenValueHolder.php">
    <PossiblyNullReference occurrences="1">
      <code>isExpired</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/DependencyInjection/Configuration.php">
    <PossiblyUndefinedMethod occurrences="1">
      <code>children</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/DependencyInjection/DependencyExtension.php">
    <PossiblyNullOperand occurrences="2">
      <code>$configDir</code>
      <code>$configDir</code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/DependencyInjection/Module/ParkManagerModuleDependencyExtension.php">
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$configs</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;moduleDir</code>
    </PossiblyNullArgument>
    <PossiblyNullOperand occurrences="7">
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
      <code>$this-&gt;moduleDir</code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Doctrine/EntityRepository.php">
    <TypeCoercion occurrences="6">
      <code>$entityManager</code>
      <code>$entityManager-&gt;getMetadataFactory()-&gt;getMetadataFor($className)</code>
      <code>$entityManager</code>
      <code>$entityManager-&gt;getMetadataFactory()-&gt;getMetadataFor($className)</code>
      <code>$entityManager</code>
      <code>$entityManager-&gt;getMetadataFactory()-&gt;getMetadataFor($className)</code>
    </TypeCoercion>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Doctrine/EventSourcedEntityRepository.php">
    <TypeCoercion occurrences="2">
      <code>$entityManager</code>
      <code>$entityManager</code>
    </TypeCoercion>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services.php">
    <UndefinedFunction occurrences="1">
      <code>ref('park_manager.event_bus')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services/console.php">
    <UndefinedFunction occurrences="1">
      <code>ref('park_manager.command_bus')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services/form.php">
    <UndefinedFunction occurrences="1">
      <code>ref('park_manager.command_bus')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services/messenger.php">
    <UndefinedFunction occurrences="1">
      <code>ref('security.authorization_checker')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services/security.php">
    <UndefinedFunction occurrences="1">
      <code>ref('park_manager.repository.administrator')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Resources/config/services/twig.php">
    <UndefinedFunction occurrences="1">
      <code>ref('park_manager.application_context')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Security/BrowserKitAuthenticator.php">
    <MoreSpecificImplementedParamType occurrences="2">
      <code>$credentials</code>
      <code>$credentials</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Security/FormAuthenticator.php">
    <MoreSpecificImplementedParamType occurrences="2">
      <code>$credentials</code>
      <code>$user</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$request-&gt;getSession()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>set</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Security/SecurityUser.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$user</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/Security/UserProvider.php">
    <LessSpecificReturnStatement occurrences="1"/>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$user</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1">
      <code>SecurityUser</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Common/ApplicationContext.php">
    <InvalidNullableReturnType occurrences="2">
      <code>string</code>
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="2">
      <code>return $this-&gt;activeSection;</code>
      <code>return $this-&gt;activeSection;</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Form/Type/Security/ChangePasswordDataMapper.php">
    <PossiblyInvalidArgument occurrences="2">
      <code>$forms</code>
      <code>$forms</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Form/Type/Security/ChangePasswordType.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>?string</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Form/Type/Security/ConfirmPasswordResetDataMapper.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$forms</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Form/Type/Security/RequestPasswordResetDataMapper.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$forms</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Module/CoreModule/Infrastructure/UserInterface/Web/Form/Type/Security/RequestPasswordResetType.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>?string</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="src/Module/CoreModule/Test/Crypto/FakeSplitTokenFactory.php">
    <UndefinedClass occurrences="1">
      <code>HiddenString</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Test/Domain/EventSourcedRepositoryTestHelper.php">
    <UndefinedClass occurrences="4">
      <code>EventEmitter</code>
      <code>EventEmitter</code>
      <code>EventEmitter</code>
      <code>EventEmitter</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Test/Domain/EventsRecordingEntityAssertionTrait.php">
    <InvalidArgument occurrences="1">
      <code>$expectedEvents</code>
    </InvalidArgument>
  </file>
  <file src="src/Module/CoreModule/Test/Domain/MockRepository.php">
    <InvalidCast occurrences="1">
      <code>(string) $id</code>
    </InvalidCast>
    <ReservedWord occurrences="2">
      <code>array&lt;string,string&lt;object&gt;&gt;</code>
      <code>array&lt;string,string&lt;object&gt;&gt;</code>
    </ReservedWord>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Command/Client/ConfirmEmailAddressChangeHandlerTest.php">
    <UndefinedClass occurrences="1">
      <code>$this-&gt;fullToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Command/Client/ConfirmPasswordResetHandlerTest.php">
    <UndefinedClass occurrences="1">
      <code>$this-&gt;fullToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Command/Client/RequestEmailAddressChangeTest.php">
    <LessSpecificReturnStatement occurrences="2">
      <code>return $confirmationMailerProphecy-&gt;reveal();</code>
      <code>return $confirmationMailerProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>EmailAddressChangeRequestMailer</code>
      <code>EmailAddressChangeRequestMailer</code>
    </MoreSpecificReturnType>
    <UndefinedClass occurrences="2">
      <code>$this-&gt;fullToken-&gt;token()</code>
      <code>$splitToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Query/Administrator/GetAdministratorWithPasswordResetTokenHandlerTest.php">
    <UndefinedClass occurrences="1">
      <code>$this-&gt;fullToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Query/Client/GetClientWithPasswordResetTokenHandlerTest.php">
    <UndefinedClass occurrences="1">
      <code>$this-&gt;fullToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Service/Crypto/Argon2SplitTokenFactoryTest.php">
    <UndefinedClass occurrences="1">
      <code>$splitToken-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Service/Crypto/Argon2SplitTokenTest.php">
    <PossiblyNullArgument occurrences="3">
      <code>$token = $splitToken-&gt;toValueHolder()-&gt;verifierHash()</code>
      <code>$value-&gt;verifierHash()</code>
      <code>$value-&gt;verifierHash()</code>
    </PossiblyNullArgument>
    <UndefinedClass occurrences="5">
      <code>HiddenString</code>
      <code>HiddenString</code>
      <code>$splitToken-&gt;token()</code>
      <code>$splitToken-&gt;token()</code>
      <code>$splitTokenReconstituted-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Application/Service/Crypto/SplitTokenValueHolderTest.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>return (new Instantiator())-&gt;instantiate(SplitTokenValueHolder::class);</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>SplitTokenValueHolder</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/CoreModule/Tests/Domain/Administrator/AdministratorTest.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>SplitToken::TOKEN_CHAR_LENGTH</code>
    </PossiblyInvalidArgument>
    <UndefinedClass occurrences="1">
      <code>$token-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Domain/Client/ClientTest.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>SplitToken::TOKEN_CHAR_LENGTH</code>
    </PossiblyInvalidArgument>
    <UndefinedClass occurrences="1">
      <code>$token-&gt;token()</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/Messenger/Middleware/SecurityMiddlewareTest.php">
    <InvalidArgument occurrences="2">
      <code>self::isInstanceOf(MockMessage::class)</code>
      <code>self::isInstanceOf(MockMessage::class)</code>
    </InvalidArgument>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/Security/EventListener/UpdateAuthTokenTokenWhenPasswordWasChangedPasswordChangedListenerTest.php">
    <InvalidArgument occurrences="1">
      <code>$this-&gt;createMock(UserInterface::class)</code>
    </InvalidArgument>
    <LessSpecificReturnStatement occurrences="4">
      <code>return $userProviderProphecy-&gt;reveal();</code>
      <code>return $tokenStorageProphecy-&gt;reveal();</code>
      <code>return $userProviderProphecy-&gt;reveal();</code>
      <code>return $tokenStorageProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="4">
      <code>UserProviderInterface</code>
      <code>TokenStorageInterface</code>
      <code>UserProviderInterface</code>
      <code>TokenStorageInterface</code>
    </MoreSpecificReturnType>
    <TooManyArguments occurrences="3">
      <code>$tokenStorageProphecy-&gt;getToken()-&gt;willReturn($token)</code>
      <code>$userProviderProphecy-&gt;refreshUser($currentUser)-&gt;willReturn($user)</code>
      <code>$tokenStorageProphecy-&gt;getToken()-&gt;willReturn($token)</code>
    </TooManyArguments>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/Security/SecurityUserTest.php">
    <PossiblyNullArgument occurrences="1">
      <code>$id</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/UserInterface/Web/Common/Form/ConfirmationHandler/CheckedConfirmationHandlerTest.php">
    <LessSpecificReturnStatement occurrences="2">
      <code>return $tokenManagerProphecy-&gt;reveal();</code>
      <code>return $tokenManagerProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>CsrfTokenManagerInterface</code>
      <code>CsrfTokenManagerInterface</code>
    </MoreSpecificReturnType>
    <TooManyArguments occurrences="4">
      <code>$tokenManagerProphecy-&gt;getToken($tokenId)-&gt;willReturn(new CsrfToken($tokenId, 'valid-token'))</code>
      <code>$tokenManagerProphecy-&gt;isTokenValid(Argument::any())-&gt;willReturn(false)</code>
      <code>$tokenManagerProphecy-&gt;getToken($tokenId)-&gt;willReturn(new CsrfToken($tokenId, 'valid-token'))</code>
      <code>$tokenManagerProphecy-&gt;isTokenValid(new CsrfToken($tokenId, 'valid-token'))-&gt;willReturn(true)</code>
    </TooManyArguments>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/UserInterface/Web/Common/Form/ConfirmationHandler/ConfirmationHandlerTest.php">
    <LessSpecificReturnStatement occurrences="2">
      <code>return $tokenManagerProphecy-&gt;reveal();</code>
      <code>return $tokenManagerProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>CsrfTokenManagerInterface</code>
      <code>CsrfTokenManagerInterface</code>
    </MoreSpecificReturnType>
    <TooManyArguments occurrences="4">
      <code>$tokenManagerProphecy-&gt;getToken($tokenId)-&gt;willReturn(new CsrfToken($tokenId, 'valid-token'))</code>
      <code>$tokenManagerProphecy-&gt;isTokenValid(Argument::any())-&gt;willReturn(false)</code>
      <code>$tokenManagerProphecy-&gt;getToken($tokenId)-&gt;willReturn(new CsrfToken($tokenId, 'valid-token'))</code>
      <code>$tokenManagerProphecy-&gt;isTokenValid(new CsrfToken($tokenId, 'valid-token'))-&gt;willReturn(true)</code>
    </TooManyArguments>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/UserInterface/Web/EventListener/ApplicationSectionListenerTest.php">
    <InvalidArgument occurrences="3">
      <code>$event</code>
      <code>$event</code>
      <code>$event</code>
    </InvalidArgument>
    <LessSpecificReturnStatement occurrences="2">
      <code>return $contextProphecy-&gt;reveal();</code>
      <code>return $contextProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>ApplicationContext</code>
      <code>ApplicationContext</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Module/CoreModule/Tests/Infrastructure/UserInterface/Web/EventListener/TwigResponseListenerTest.php">
    <InvalidArgument occurrences="1">
      <code>$this-&gt;createMock(HttpKernelInterface::class)</code>
    </InvalidArgument>
    <LessSpecificReturnStatement occurrences="2">
      <code>return $containerProphecy-&gt;reveal();</code>
      <code>return $containerProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>ContainerInterface</code>
      <code>ContainerInterface</code>
    </MoreSpecificReturnType>
    <TooManyArguments occurrences="2">
      <code>$twig-&gt;render($template, $variables)-&gt;willReturn('It was like this when I got here.')</code>
      <code>$containerProphecy-&gt;get('twig')-&gt;willReturn($twig-&gt;reveal())</code>
    </TooManyArguments>
  </file>
  <file src="src/Module/WebhostingModule/Application/Account/RegisterWebhostingAccountHandler.php">
    <PossiblyNullArgument occurrences="1">
      <code>$command-&gt;customCapabilities()</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/Event/WebhostingAccountCapabilitiesWasChanged.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/Event/WebhostingAccountOwnerWasSwitched.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/Event/WebhostingAccountPackageAssignmentWasChanged.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/Event/WebhostingAccountWasMarkedForRemoval.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/Event/WebhostingAccountWasRegistered.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Account/WebhostingAccount.php">
    <MissingDependency occurrences="7">
      <code>Event\WebhostingAccountWasRegistered</code>
      <code>Event\WebhostingAccountWasRegistered</code>
      <code>Event\WebhostingAccountPackageAssignmentWasChanged</code>
      <code>Event\WebhostingAccountPackageAssignmentWasChanged</code>
      <code>Event\WebhostingAccountCapabilitiesWasChanged</code>
      <code>Event\WebhostingAccountOwnerWasSwitched</code>
      <code>Event\WebhostingAccountWasMarkedForRemoval</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Package/Event/WebhostingPackageCapabilitiesWasChanged.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Package/Event/WebhostingPackageWasCreated.php">
    <UndefinedClass occurrences="1">
      <code>DomainEvent</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Domain/Package/WebhostingPackage.php">
    <MissingDependency occurrences="2">
      <code>WebhostingPackageWasCreated</code>
      <code>WebhostingPackageCapabilitiesWasChanged</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/DependencyInjection/Compiler/CapabilitiesPass.php">
    <PossiblyFalseOperand occurrences="1">
      <code>mb_strrpos($class, '\\')</code>
    </PossiblyFalseOperand>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/DependencyInjection/Configuration.php">
    <PossiblyUndefinedMethod occurrences="2">
      <code>children</code>
      <code>canBeDisabled</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/DependencyInjection/DependencyExtension.php">
    <PossiblyNullArgument occurrences="1">
      <code>$configuration</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Doctrine/Account/WebhostingAccountOrmRepository.php">
    <UndefinedClass occurrences="1">
      <code>EventEmitter</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Doctrine/Package/WebhostingPackageOrmRepository.php">
    <UndefinedClass occurrences="1">
      <code>EventEmitter</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Resources/config/services/account.php">
    <UndefinedClass occurrences="1">
      <code>EventEmitter</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Resources/config/services/core.php">
    <UndefinedClass occurrences="1">
      <code>MessageBusConfigurator</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Resources/config/services/domain_name.php">
    <UndefinedFunction occurrences="1">
      <code>ref('doctrine.orm.entity_manager')</code>
    </UndefinedFunction>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Resources/config/services/package.php">
    <UndefinedClass occurrences="1">
      <code>EventEmitter</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Service/Package/AccountCapabilitiesRestrictionGuard.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/Service/Package/Capability/MonthlyTrafficQuotaApplier.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Infrastructure/ServiceBus/Middleware/AccountCapabilitiesRestrictionGuardMiddleware.php">
    <UndefinedClass occurrences="1">
      <code>Middleware</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/ParkManagerWebhostingModule.php">
    <TypeCoercion occurrences="1">
      <code>$this-&gt;container-&gt;get(CapabilitiesFactory::class)</code>
    </TypeCoercion>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/Event/WebhostingAccountCapabilitiesWasChangedTest.php">
    <MissingDependency occurrences="1">
      <code>WebhostingAccountCapabilitiesWasChanged</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/Event/WebhostingAccountOwnerWasSwitchedTest.php">
    <MissingDependency occurrences="1">
      <code>WebhostingAccountOwnerWasSwitched</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/Event/WebhostingAccountPackageAssignmentWasChangedTest.php">
    <MissingDependency occurrences="2">
      <code>WebhostingAccountPackageAssignmentWasChanged</code>
      <code>WebhostingAccountPackageAssignmentWasChanged</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/Event/WebhostingAccountWasRegisteredTest.php">
    <MissingDependency occurrences="1">
      <code>WebhostingAccountWasRegistered</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/Handler/RegisterWebhostingAccountHandlerTest.php">
    <InvalidReturnStatement occurrences="1">
      <code>return $this-&gt;createMock(WebhostingPackageRepository::class);</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>WebhostingPackageRepository</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="5">
      <code>return $accountRepositoryProphecy-&gt;reveal();</code>
      <code>return $accountRepositoryProphecy-&gt;reveal();</code>
      <code>return $packageRepositoryProphecy-&gt;reveal();</code>
      <code>return $domainNameRepositoryProphecy-&gt;reveal();</code>
      <code>return $domainNameRepositoryProphecy-&gt;reveal();</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="5">
      <code>WebhostingAccountRepository</code>
      <code>WebhostingAccountRepository</code>
      <code>WebhostingPackageRepository</code>
      <code>WebhostingDomainNameRepository</code>
      <code>WebhostingDomainNameRepository</code>
    </MoreSpecificReturnType>
    <TooManyArguments occurrences="3">
      <code>$packageRepositoryProphecy-&gt;get($package-&gt;id())-&gt;willReturn($package)</code>
      <code>$domainNameRepositoryProphecy-&gt;findByFullName($expectedDomain)-&gt;willReturn(null)</code>
      <code>$domainNameRepositoryProphecy-&gt;findByFullName($expectedDomain)-&gt;willReturn($existingDomain)</code>
    </TooManyArguments>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Account/WebhostingAccountTest.php">
    <MissingDependency occurrences="9">
      <code>WebhostingAccountWasRegistered</code>
      <code>WebhostingAccountWasRegistered</code>
      <code>WebhostingAccountPackageAssignmentWasChanged</code>
      <code>WebhostingAccountPackageAssignmentWasChanged</code>
      <code>WebhostingAccountPackageAssignmentWasChanged</code>
      <code>WebhostingAccountCapabilitiesWasChanged</code>
      <code>WebhostingAccountCapabilitiesWasChanged</code>
      <code>WebhostingAccountOwnerWasSwitched</code>
      <code>WebhostingAccountWasMarkedForRemoval</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/DomainName/WebhostingDomainNameTest.php">
    <InvalidReturnStatement occurrences="1">
      <code>return $account;</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>WebhostingAccount</code>
    </InvalidReturnType>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Package/Event/WebhostingPackageCapabilitiesWasChangedTest.php">
    <MissingDependency occurrences="1">
      <code>WebhostingPackageCapabilitiesWasChanged</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Package/Event/WebhostingPackageWasCreatedTest.php">
    <MissingDependency occurrences="1">
      <code>WebhostingPackageWasCreated</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Domain/Package/WebhostingPackageTest.php">
    <MissingDependency occurrences="2">
      <code>WebhostingPackageWasCreated</code>
      <code>WebhostingPackageCapabilitiesWasChanged</code>
    </MissingDependency>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Fixtures/Infrastructure/PackageCapability/AllowingWithWarningsGuard.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Fixtures/Infrastructure/PackageCapability/DenyingGuard.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Fixtures/Infrastructure/PackageCapability/MonthlyTrafficQuotaApplier.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Fixtures/Infrastructure/PackageCapability/MonthlyTrafficQuotaGuard.php">
    <UndefinedClass occurrences="1">
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Infrastructure/Doctrine/DomainName/WebhostingDomainNameOrmRepositoryTest.php">
    <PossiblyNullReference occurrences="3">
      <code>id</code>
      <code>id</code>
      <code>id</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Infrastructure/Doctrine/Package/WebhostingCapabilitiesTypeTest.php">
    <PossiblyNullArgument occurrences="2">
      <code>$type-&gt;convertToDatabaseValue(new Capabilities(), $platform)</code>
      <code>$type-&gt;convertToDatabaseValue(new Capabilities(new MonthlyTrafficQuota(50)), $platform)</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Infrastructure/ServiceBus/Middleware/CapabilityCoveringCommandValidatorTest.php">
    <UndefinedClass occurrences="4">
      <code>ServiceMessages</code>
      <code>ServiceMessages</code>
      <code>ServiceMessages</code>
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
  <file src="src/Module/WebhostingModule/Tests/Service/Package/AccountCapabilitiesGuardTest.php">
    <InvalidReturnStatement occurrences="1">
      <code>return $account;</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>WebhostingAccount</code>
    </InvalidReturnType>
    <TooManyArguments occurrences="2">
      <code>$repositoryProphecy-&gt;get(WebhostingAccountId::fromString(self::ACCOUNT_ID1))-&gt;willReturn($account1)</code>
      <code>$repositoryProphecy-&gt;get(WebhostingAccountId::fromString(self::ACCOUNT_ID2))-&gt;willReturn($account2)</code>
    </TooManyArguments>
    <TypeCoercion occurrences="1">
      <code>$accountRepository</code>
    </TypeCoercion>
    <UndefinedClass occurrences="3">
      <code>ServiceMessages</code>
      <code>ServiceMessages</code>
      <code>ServiceMessages</code>
    </UndefinedClass>
  </file>
</files>
